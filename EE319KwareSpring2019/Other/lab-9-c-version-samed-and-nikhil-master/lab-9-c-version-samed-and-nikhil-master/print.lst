


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on LM4F120 or TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000         
   13 00000000                 IMPORT           ST7735_OutChar
   14 00000000                 IMPORT           ST7735_OutString
   15 00000000                 EXPORT           LCD_OutDec
   16 00000000                 EXPORT           LCD_OutFix
   17 00000000         
   18 00000000         
   19 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   20 00000000                 THUMB
   21 00000000         
   22 00000000         
   23 00000000         
   24 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   25 00000000         ; Output a 32-bit number in unsigned decimal format
   26 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   27 00000000         ; Output: none
   28 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   29 00000000         
   30 00000000         LCD_OutDec
   31 00000000 00000000 
                       Carry   EQU              0
   32 00000000 00000004 
                       PlCtr   EQU              4
   33 00000000        B 
                       FP      RN               11
   34 00000000         
   35 00000000 B082            SUB              SP, #8      ;adjusting stack fo
                                                            r local variables
   36 00000002 46EB            MOV              R11, SP
   37 00000004 B510            PUSH             {R4, LR}    ;initialize local v
                                                            ariables : Place-Ho
                                                            lders and Carry Bit
                                                             for Mod
   38 00000006 F04F 0300       MOV              R3, #0
   39 0000000A F8CB 3004       STR              R3, [FP, #PlCtr]
   40 0000000E F8CB 0000       STR              R0, [FP, #Carry]
   41 00000012 F04F 020A       MOV              R2, #10
   42 00000016         
   43 00000016         Mod
   44 00000016 F8DB 0000       LDR              R0, [FP, #Carry] ; check to mak
                                                            e sure R0 isn't 0-9



ARM Macro Assembler    Page 2 


                                                            
   45 0000001A 2809            CMP              R0, #9
   46 0000001C D90F            BLS              Inc         ; if it is a single
                                                             digit, branch to i
                                                            ncrement Place-Hold
                                                            er and to prepare f
                                                            or print
   47 0000001E FBB0 F4F2       UDIV             R4, R0, R2  ;divide by 10
   48 00000022 F8CB 4000       STR              R4, [FP, #Carry]
   49 00000026 FB04 F402       MUL              R4, R4, R2  ;multiply by 10, ef
                                                            fectively modulatin
                                                            g equation
   50 0000002A EBA0 0404       SUB              R4, R0, R4  ;subtract 'mod'ed #
                                                             from r0 to get dig
                                                            it to push onto sta
                                                            ck
   51 0000002E B430            PUSH             {R5, R4}
   52 00000030 F8DB 3004       LDR              R3, [FP, #PlCtr]
   53 00000034 F103 0301       ADD              R3, R3, #1  ;increment Place-Ho
                                                            lder
   54 00000038 F8CB 3004       STR              R3, [FP, #PlCtr]
   55 0000003C E7EB            B                Mod
   56 0000003E         Inc
   57 0000003E B421            PUSH             {R5, R0}
   58 00000040 F8DB 3004       LDR              R3, [FP, #PlCtr] ;final increme
                                                            nting of place hold
                                                            er
   59 00000044 F103 0301       ADD              R3, #1
   60 00000048 F8CB 3004       STR              R3, [FP, #PlCtr]
   61 0000004C         Print
   62 0000004C BC11            POP              {R0,R4}     ;pop digits off of 
                                                            stack, add 0x30 to 
                                                            get ascii value and
                                                             feed into outchar 
                                                            function
   63 0000004E F100 0030       ADD              R0, #0x30
   64 00000052 F7FF FFFE       BL               ST7735_OutChar
   65 00000056 F8DB 3004       LDR              R3, [FP, #PlCtr] ;decrement pla
                                                            ce-holder, keep pop
                                                            ping until all digi
                                                            ts are off
   66 0000005A F1A3 0301       SUB              R3, #1
   67 0000005E F8CB 3004       STR              R3, [FP, #PlCtr]
   68 00000062 2B00            CMP              R3, #0
   69 00000064 D1F2            BNE              Print
   70 00000066 E8BD 4010       POP              {R4, LR}
   71 0000006A B002            ADD              SP, #8      ;restore stack
   72 0000006C 4770            BX               LR
   73 0000006E 00 00           ALIGN
   74 00000070         
   75 00000070         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   76 00000070         
   77 00000070         ; -----------------------LCD _OutFix--------------------
                       --
   78 00000070         ; Output characters to LCD display in fixed-point format
                       
   79 00000070         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   80 00000070         ; Inputs:  R0 is an unsigned 32-bit number



ARM Macro Assembler    Page 3 


   81 00000070         ; Outputs: none
   82 00000070         ; E.g., R0=0,    then output "0.000 "
   83 00000070         ;       R0=3,    then output "0.003 "
   84 00000070         ;       R0=89,   then output "0.089 "
   85 00000070         ;       R0=123,  then output "0.123 "
   86 00000070         ;       R0=9999, then output "9.999 "
   87 00000070         ;       R0>9999, then output "*.*** "
   88 00000070         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   89 00000070         LCD_OutFix
   90 00000070         
   91 00000070 00000000 
                       Carry1  EQU              0
   92 00000070 00000004 
                       PlCtr1  EQU              4
   93 00000070        B 
                       FP      RN               11
   94 00000070         
   95 00000070 B082            SUB              SP, #8      ;adjusting stack fo
                                                            r local variables
   96 00000072 46EB            MOV              R11, SP
   97 00000074         
   98 00000074 B510            PUSH             {R4, LR}
   99 00000076 F242 740F       MOV              R4, #9999   ;hardcode in for >9
                                                            999 exception case
  100 0000007A 42A0            CMP              R0, R4
  101 0000007C DC49            BGT              PrintGT
  102 0000007E F04F 34FF       MOV              R4, #0xFFFFFFFF ;exception for 
                                                            0xFFFFFFFF
  103 00000082 42A0            CMP              R0, R4
  104 00000084 D045            BEQ              PrintGT
  105 00000086 F04F 0400       MOV              R4, #0
  106 0000008A F04F 0300       MOV              R3, #0
  107 0000008E F8CB 3004       STR              R3, [FP, #PlCtr1] ;R3 is Place-
                                                            Holder, R0 is your 
                                                            original data/carry
                                                             variable, r2 has m
                                                            od arithmetic #
  108 00000092 F8CB 0000       STR              R0, [FP, #Carry1] ;initialize l
                                                            ocal variables : Pl
                                                            ace-Holders and Car
                                                            ry Bit for Mod
  109 00000096 F04F 020A       MOV              R2, #10
  110 0000009A         
  111 0000009A         Mod1
  112 0000009A F8DB 0000       LDR              R0, [FP, #Carry1] ;same as prev
                                                            ious mod function 
  113 0000009E 2809            CMP              R0, #9
  114 000000A0 D90F            BLS              Inc1
  115 000000A2 FBB0 F4F2       UDIV             R4, R0, R2
  116 000000A6 F8CB 4000       STR              R4, [FP, #Carry1]
  117 000000AA FB04 F402       MUL              R4, R4, R2
  118 000000AE EBA0 0404       SUB              R4, R0, R4
  119 000000B2 B430            PUSH             {R5, R4}
  120 000000B4 F8DB 3004       LDR              R3, [FP, #PlCtr1]
  121 000000B8 F103 0301       ADD              R3, R3, #1
  122 000000BC F8CB 3004       STR              R3, [FP, #PlCtr1]
  123 000000C0 E7EB            B                Mod1
  124 000000C2         Inc1



ARM Macro Assembler    Page 4 


  125 000000C2 B421            PUSH             {R5, R0}    ;does a final incre
                                                            ment of place-holde
                                                            r
  126 000000C4 F8DB 3004       LDR              R3, [FP, #PlCtr1]
  127 000000C8 F103 0301       ADD              R3, #1
  128 000000CC F8CB 3004       STR              R3, [FP, #PlCtr1]
  129 000000D0 2B01            CMP              R3, #1      ;next 3 "BEQ"s chec
                                                            k to see how many p
                                                            laces of 0s are nee
                                                            ded to get desired 
                                                            format
  130 000000D2 D042            BEQ              PUSH3
  131 000000D4 2B02            CMP              R3, #2
  132 000000D6 D049            BEQ              PUSH2
  133 000000D8 2B03            CMP              R3, #3
  134 000000DA D050            BEQ              PUSH1
  135 000000DC F1A3 0401       SUB              R4, R3, #1
  136 000000E0         Print1
  137 000000E0 BC21            POP              {R0,R5}     ;printing is same a
                                                            s last function
  138 000000E2 F100 0030       ADD              R0, #0x30
  139 000000E6 F7FF FFFE       BL               ST7735_OutChar
  140 000000EA F8DB 3004       LDR              R3, [FP, #PlCtr1]
  141 000000EE F1A3 0301       SUB              R3, #1
  142 000000F2 F8CB 3004       STR              R3, [FP, #PlCtr1]
  143 000000F6 429C            CMP              R4, R3      ;94 is used in this
                                                             scenario to know w
                                                            hen to print the ".
                                                            "
  144 000000F8 D006            BEQ              PrintS
  145 000000FA 2B00    Ret     CMP              R3, #0
  146 000000FC D1F0            BNE              Print1
  147 000000FE         EndM
  148 000000FE E8BD 4010       POP              {R4, LR}    ;AAPCS compliant
  149 00000102 B002            ADD              SP, #8      ;restore stack poin
                                                            ter
  150 00000104 4770            BX               LR
  151 00000106 00 00           ALIGN
  152 00000108         
  153 00000108         PrintS
  154 00000108 F04F 002E       MOV              R0, #0x2E   ;print "."
  155 0000010C F7FF FFFE       BL               ST7735_OutChar
  156 00000110 E7F3            B                Ret
  157 00000112         PrintGT
  158 00000112 F04F 002A       MOV              R0, #0x2A   ;string to print if
                                                             number is > than 9
                                                            999
  159 00000116 B502            PUSH             {LR,R1}
  160 00000118 F7FF FFFE       BL               ST7735_OutChar
  161 0000011C E8BD 4002       POP              {LR,R1}
  162 00000120 F04F 002E       MOV              R0, #0x2E
  163 00000124 B502            PUSH             {LR,R1}
  164 00000126 F7FF FFFE       BL               ST7735_OutChar
  165 0000012A E8BD 4002       POP              {LR,R1}
  166 0000012E F04F 002A       MOV              R0, #0x2A
  167 00000132 B502            PUSH             {LR,R1}
  168 00000134 F7FF FFFE       BL               ST7735_OutChar
  169 00000138 E8BD 4002       POP              {LR,R1}
  170 0000013C F04F 002A       MOV              R0, #0x2A



ARM Macro Assembler    Page 5 


  171 00000140 B502            PUSH             {LR,R1}
  172 00000142 F7FF FFFE       BL               ST7735_OutChar
  173 00000146 E8BD 4002       POP              {LR,R1}
  174 0000014A F04F 002A       MOV              R0, #0x2A
  175 0000014E B502            PUSH             {LR,R1}
  176 00000150 F7FF FFFE       BL               ST7735_OutChar
  177 00000154 E8BD 4002       POP              {LR,R1}
  178 00000158 E7D1            B                EndM
  179 0000015A         
  180 0000015A         PUSH3
  181 0000015A F04F 0000       MOV              R0, #0      ; pushes 0s onto st
                                                            ack that are needed
                                                             as filler for desi
                                                            red output format
  182 0000015E B421            PUSH             {R5, R0}
  183 00000160 F8DB 3004       LDR              R3, [FP, #PlCtr]
  184 00000164 F103 0301       ADD              R3, #1
  185 00000168 F8CB 3004       STR              R3, [FP, #PlCtr]
  186 0000016C         PUSH2
  187 0000016C F04F 0000       MOV              R0, #0
  188 00000170 B421            PUSH             {R5, R0}
  189 00000172 F8DB 3004       LDR              R3, [FP, #PlCtr]
  190 00000176 F103 0301       ADD              R3, #1
  191 0000017A F8CB 3004       STR              R3, [FP, #PlCtr]
  192 0000017E         PUSH1
  193 0000017E F04F 0000       MOV              R0, #0
  194 00000182 B421            PUSH             {R5, R0}
  195 00000184 F8DB 3004       LDR              R3, [FP, #PlCtr]
  196 00000188 F103 0301       ADD              R3, #1
  197 0000018C F8CB 3004       STR              R3, [FP, #PlCtr]
  198 00000190 F1A3 0401       SUB              R4, R3, #1
  199 00000194 E7A4            B                Print1
  200 00000196         
  201 00000196         
  202 00000196         
  203 00000196         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  204 00000196         
  205 00000196 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  206 00000198                 END                          ; end of file      
                                                                               
                                                                               
                                                               
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\print.d -o.\print.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\C
MSIS\Include -IC:\Keil_v5\ARM\INC\Luminary --predefine="__EVAL SETA 1" --predef
ine="__UVISION_VERSION SETA 526" --list=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 19 in file Print.s
   Uses
      None
Comment: .text unused
EndM 000000FE

Symbol: EndM
   Definitions
      At line 147 in file Print.s
   Uses
      At line 178 in file Print.s
Comment: EndM used once
Inc 0000003E

Symbol: Inc
   Definitions
      At line 56 in file Print.s
   Uses
      At line 46 in file Print.s
Comment: Inc used once
Inc1 000000C2

Symbol: Inc1
   Definitions
      At line 124 in file Print.s
   Uses
      At line 114 in file Print.s
Comment: Inc1 used once
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 30 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 00000070

Symbol: LCD_OutFix
   Definitions
      At line 89 in file Print.s
   Uses
      At line 16 in file Print.s
Comment: LCD_OutFix used once
Mod 00000016

Symbol: Mod
   Definitions
      At line 43 in file Print.s
   Uses
      At line 55 in file Print.s
Comment: Mod used once
Mod1 0000009A

Symbol: Mod1



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 111 in file Print.s
   Uses
      At line 123 in file Print.s
Comment: Mod1 used once
PUSH1 0000017E

Symbol: PUSH1
   Definitions
      At line 192 in file Print.s
   Uses
      At line 134 in file Print.s
Comment: PUSH1 used once
PUSH2 0000016C

Symbol: PUSH2
   Definitions
      At line 186 in file Print.s
   Uses
      At line 132 in file Print.s
Comment: PUSH2 used once
PUSH3 0000015A

Symbol: PUSH3
   Definitions
      At line 180 in file Print.s
   Uses
      At line 130 in file Print.s
Comment: PUSH3 used once
Print 0000004C

Symbol: Print
   Definitions
      At line 61 in file Print.s
   Uses
      At line 69 in file Print.s
Comment: Print used once
Print1 000000E0

Symbol: Print1
   Definitions
      At line 136 in file Print.s
   Uses
      At line 146 in file Print.s
      At line 199 in file Print.s

PrintGT 00000112

Symbol: PrintGT
   Definitions
      At line 157 in file Print.s
   Uses
      At line 101 in file Print.s
      At line 104 in file Print.s

PrintS 00000108

Symbol: PrintS
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 153 in file Print.s
   Uses
      At line 144 in file Print.s
Comment: PrintS used once
Ret 000000FA

Symbol: Ret
   Definitions
      At line 145 in file Print.s
   Uses
      At line 156 in file Print.s
Comment: Ret used once
16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Carry 00000000

Symbol: Carry
   Definitions
      At line 31 in file Print.s
   Uses
      At line 40 in file Print.s
      At line 44 in file Print.s
      At line 48 in file Print.s

Carry1 00000000

Symbol: Carry1
   Definitions
      At line 91 in file Print.s
   Uses
      At line 108 in file Print.s
      At line 112 in file Print.s
      At line 116 in file Print.s

PlCtr 00000004

Symbol: PlCtr
   Definitions
      At line 32 in file Print.s
   Uses
      At line 39 in file Print.s
      At line 52 in file Print.s
      At line 54 in file Print.s
      At line 58 in file Print.s
      At line 60 in file Print.s
      At line 65 in file Print.s
      At line 67 in file Print.s
      At line 183 in file Print.s
      At line 185 in file Print.s
      At line 189 in file Print.s
      At line 191 in file Print.s
      At line 195 in file Print.s
      At line 197 in file Print.s

PlCtr1 00000004

Symbol: PlCtr1
   Definitions
      At line 92 in file Print.s
   Uses
      At line 107 in file Print.s
      At line 120 in file Print.s
      At line 122 in file Print.s
      At line 126 in file Print.s
      At line 128 in file Print.s
      At line 140 in file Print.s
      At line 142 in file Print.s

4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 13 in file Print.s
   Uses
      At line 64 in file Print.s
      At line 139 in file Print.s
      At line 155 in file Print.s
      At line 160 in file Print.s
      At line 164 in file Print.s
      At line 168 in file Print.s
      At line 172 in file Print.s
      At line 176 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 14 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
354 symbols in table
