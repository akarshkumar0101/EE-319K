


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program initially written by: Yerraballi and Valvano
    3 00000000         ; Author: Place your name here
    4 00000000         ; Date Created: 1/15/2018 
    5 00000000         ; Last Modified: 1/18/2019 
    6 00000000         ; Brief description of the program: Spring 2019 Lab1
    7 00000000         ; The objective of this system is to implement odd-bit c
                       ounting system
    8 00000000         ; Hardware connections: 
    9 00000000         ;  Output is positive logic, 1 turns on the LED, 0 turns
                        off the LED
   10 00000000         ;  Inputs are negative logic, meaning switch not pressed
                        is 1, pressed is 0
   11 00000000         ;    PE0 is an input 
   12 00000000         ;    PE1 is an input 
   13 00000000         ;    PE2 is an input 
   14 00000000         ;    PE3 is the output
   15 00000000         ; Overall goal: 
   16 00000000         ;   Make the output 1 if there is an odd number of 1's a
                       t the inputs, 
   17 00000000         ;     otherwise make the output 0
   18 00000000         ; The specific operation of this system 
   19 00000000         ;   Initialize Port E to make PE0,PE1,PE2 inputs and PE3
                        an output
   20 00000000         ;   Over and over, read the inputs, calculate the result
                        and set the output
   21 00000000         
   22 00000000         ; NOTE: Do not use any conditional branches in your solu
                       tion. 
   23 00000000         ;       We want you to think of the solution in terms of
                        logical and shift operations
   24 00000000         
   25 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   26 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   27 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   28 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   29 00000000         
   30 00000000                 THUMB
   31 00000000                 AREA             DATA, ALIGN=2
   32 00000000         ;global variables go here
   33 00000000                 ALIGN
   34 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   35 00000000                 EXPORT           Start
   36 00000000         Start
   37 00000000         ; code to execute once at start goes here
   38 00000000 4913            LDR              R1, = SYSCTL_RCGCGPIO_R
   39 00000002 6808            LDR              R0, [R1]
   40 00000004 F040 0010       ORR              R0, #0x10
   41 00000008 6008            STR              R0, [R1]
   42 0000000A BF00            NOP



ARM Macro Assembler    Page 2 


   43 0000000C BF00            NOP
   44 0000000E 4911            LDR              R1,= GPIO_PORTE_DIR_R
   45 00000010 6808            LDR              R0, [R1]
   46 00000012 F040 0008       ORR              R0,#0x8
   47 00000016 6008            STR              R0,[R1]
   48 00000018 490F            LDR              R1,= GPIO_PORTE_DEN_R
   49 0000001A 6808            LDR              R0,[R1]
   50 0000001C F040 000F       ORR              R0,#0xF
   51 00000020 6008            STR              R0,[R1]
   52 00000022 490E            LDR              R1,=GPIO_PORTE_DATA_R
   53 00000024         
   54 00000024         loop
   55 00000024         ; code that runs over and over goes here
   56 00000024 F002 0200       AND              R2, R2, #0
   57 00000028 6808            LDR              R0,[R1]
   58 0000002A         
   59 0000002A EA82 0200       EOR              R2, R2, R0  ;
   60 0000002E EA4F 0050       LSR              R0, #1
   61 00000032 EA82 0200       EOR              R2, R2, R0  ;
   62 00000036 EA4F 0050       LSR              R0, #1
   63 0000003A EA82 0200       EOR              R2, R2, R0  ;
   64 0000003E EA4F 0050       LSR              R0, #1
   65 00000042 F002 0201       AND              R2, R2, #1
   66 00000046         
   67 00000046 EA4F 02C2       LSL              R2, R2, #3
   68 0000004A         
   69 0000004A         
   70 0000004A 600A            STR              R2, [R1]
   71 0000004C         
   72 0000004C         
   73 0000004C         
   74 0000004C E7EA            B                loop
   75 0000004E         
   76 0000004E 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
   77 00000050                 END                          ; end of file
              400FE608 
              40024400 
              4002451C 
              400243FC 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\main.d -o.\main.o -I.\RTE\_Lab1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\
5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Inclu
de\TM4C123 --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526"
 --predefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --list=.\main.lst
 main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 31 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 34 in file main.s
   Uses
      None
Comment: .text unused
Start 00000000

Symbol: Start
   Definitions
      At line 36 in file main.s
   Uses
      At line 35 in file main.s
Comment: Start used once
loop 00000024

Symbol: loop
   Definitions
      At line 54 in file main.s
   Uses
      At line 74 in file main.s
Comment: loop used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 25 in file main.s
   Uses
      At line 52 in file main.s
Comment: GPIO_PORTE_DATA_R used once
GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 27 in file main.s
   Uses
      At line 48 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 26 in file main.s
   Uses
      At line 44 in file main.s
Comment: GPIO_PORTE_DIR_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 28 in file main.s
   Uses
      At line 38 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
4 symbols
344 symbols in table
