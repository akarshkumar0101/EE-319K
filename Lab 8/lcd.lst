


ARM Macro Assembler    Page 1 


    1 00000000         ; LCD.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         
    5 00000000         ; Runs on LM4F120/TM4C123
    6 00000000         ; Use SSI0 to send an 8-bit code to the ST7735 160x128 p
                       ixel LCD.
    7 00000000         
    8 00000000         ; As part of Lab 7, students need to implement these LCD
                       _WriteCommand and LCD_WriteData
    9 00000000         ; This driver assumes two low-level LCD functions
   10 00000000         
   11 00000000         ; Backlight (pin 10) connected to +3.3 V
   12 00000000         ; MISO (pin 9) unconnected
   13 00000000         ; SCK (pin 8) connected to PA2 (SSI0Clk)
   14 00000000         ; MOSI (pin 7) connected to PA5 (SSI0Tx)
   15 00000000         ; TFT_CS (pin 6) connected to PA3 (SSI0Fss)
   16 00000000         ; CARD_CS (pin 5) unconnected
   17 00000000         ; Data/Command (pin 4) connected to PA6 (GPIO)
   18 00000000         ; RESET (pin 3) connected to PA7 (GPIO)
   19 00000000         ; VCC (pin 2) connected to +3.3 V
   20 00000000         ; Gnd (pin 1) connected to ground
   21 00000000         
   22 00000000 400043FC 
                       GPIO_PORTA_DATA_R
                               EQU              0x400043FC
   23 00000000 40008008 
                       SSI0_DR_R
                               EQU              0x40008008
   24 00000000 4000800C 
                       SSI0_SR_R
                               EQU              0x4000800C
   25 00000000 00000004 
                       SSI_SR_RNE
                               EQU              0x00000004  ; SSI Receive FIFO 
                                                            Not Empty
   26 00000000 00000010 
                       SSI_SR_BSY
                               EQU              0x00000010  ; SSI Busy Bit
   27 00000000 00000002 
                       SSI_SR_TNF
                               EQU              0x00000002  ; SSI Transmit FIFO
                                                             Not Full
   28 00000000         
   29 00000000                 EXPORT           writecommand
   30 00000000                 EXPORT           writedata
   31 00000000         
   32 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   33 00000000                 THUMB
   34 00000000                 ALIGN
   35 00000000         
   36 00000000         ; The Data/Command pin must be valid when the eighth bit
                        is
   37 00000000         ; sent.  The SSI module has hardware input and output FI
                       FOs
   38 00000000         ; that are 8 locations deep.  Based on the observation t



ARM Macro Assembler    Page 2 


                       hat
   39 00000000         ; the LCD interface tends to send a few commands and the
                       n a
   40 00000000         ; lot of data, the FIFOs are not used when writing
   41 00000000         ; commands, and they are used when writing data.  This
   42 00000000         ; ensures that the Data/Command pin status matches the b
                       yte
   43 00000000         ; that is actually being transmitted.
   44 00000000         ; The write command operation waits until all data has b
                       een
   45 00000000         ; sent, configures the Data/Command pin for commands, se
                       nds
   46 00000000         ; the command, and then waits for the transmission to
   47 00000000         ; finish.
   48 00000000         ; The write data operation waits until there is room in 
                       the
   49 00000000         ; transmit FIFO, configures the Data/Command pin for dat
                       a,
   50 00000000         ; and then adds the data to the transmit FIFO.
   51 00000000         ; NOTE: These functions will crash or stall indefinitely
                        if
   52 00000000         ; the SSI0 module is not initialized and enabled.
   53 00000000         
   54 00000000         ; This is a helper function that sends an 8-bit command 
                       to the LCD.
   55 00000000         ; Input: R0  8-bit command to transmit
   56 00000000         ; Output: none
   57 00000000         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   58 00000000         writecommand
   59 00000000         ;1) Read SSI0_SR_R and check bit 4, 
   60 00000000         ;2) If bit 4 is high, loop back to step 1 (wait for BUSY
                        bit to be low)
   61 00000000         ;3) Clear D/C=PA6 to zero
   62 00000000         ;4) Write the command to SSI0_DR_R
   63 00000000         ;5) Read SSI0_SR_R and check bit 4, 
   64 00000000         ;6) If bit 4 is high, loop back to step 5 (wait for BUSY
                        bit to be low)
   65 00000000         
   66 00000000 E92D 03FF       PUSH             {R0-R9}
   67 00000004 4913            LDR              R1, =SSI0_SR_R
   68 00000006         commandBusyWait1
   69 00000006 680A            LDR              R2,[R1]
   70 00000008 F002 0210       AND              R2, #SSI_SR_BSY
   71 0000000C 2A00            CMP              R2, #0
   72 0000000E D1FA            BNE              commandBusyWait1
   73 00000010         
   74 00000010         
   75 00000010 4B11            LDR              R3, =GPIO_PORTA_DATA_R
   76 00000012 681C            LDR              R4,[R3]
   77 00000014 F024 0440       BIC              R4, #0x40
   78 00000018 601C            STR              R4, [R3]
   79 0000001A         
   80 0000001A 4D10            LDR              R5, =SSI0_DR_R
   81 0000001C 6028            STR              R0, [R5]
   82 0000001E         
   83 0000001E         commandBusyWait2
   84 0000001E 680A            LDR              R2,[R1]
   85 00000020 F002 0210       AND              R2, #SSI_SR_BSY



ARM Macro Assembler    Page 3 


   86 00000024 2A00            CMP              R2, #0
   87 00000026 D1FA            BNE              commandBusyWait2
   88 00000028         
   89 00000028         
   90 00000028 E8BD 03FF       POP              {R0-R9}
   91 0000002C         
   92 0000002C         
   93 0000002C 4770            BX               LR          ;   return
   94 0000002E         
   95 0000002E         ; This is a helper function that sends an 8-bit data to 
                       the LCD.
   96 0000002E         ; Input: R0  8-bit data to transmit
   97 0000002E         ; Output: none
   98 0000002E         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   99 0000002E         writedata
  100 0000002E         ;1) Read SSI0_SR_R and check bit 1, 
  101 0000002E         ;2) If bit 1 is low loop back to step 1 (wait for TNF bi
                       t to be high)
  102 0000002E         ;3) Set D/C=PA6 to one
  103 0000002E         ;4) Write the 8-bit data to SSI0_DR_R
  104 0000002E         
  105 0000002E E92D 03FF       PUSH             {R0-R9}
  106 00000032 4908            LDR              R1, =SSI0_SR_R
  107 00000034         dataBusyWait1
  108 00000034 680A            LDR              R2,[R1]
  109 00000036 F002 0201       AND              R2, #0x01
  110 0000003A 2A00            CMP              R2, #0
  111 0000003C D0FA            BEQ              dataBusyWait1
  112 0000003E         
  113 0000003E         
  114 0000003E 4B06            LDR              R3, =GPIO_PORTA_DATA_R
  115 00000040 681C            LDR              R4,[R3]
  116 00000042 F044 0440       ORR              R4, #0x40
  117 00000046 601C            STR              R4, [R3]
  118 00000048         
  119 00000048 4D04            LDR              R5, =SSI0_DR_R
  120 0000004A 6028            STR              R0, [R5]
  121 0000004C         
  122 0000004C         
  123 0000004C E8BD 03FF       POP              {R0-R9}
  124 00000050         
  125 00000050 4770            BX               LR          ;   return
  126 00000052         
  127 00000052         
  128 00000052         ;***************************************************
  129 00000052         ; This is a library for the Adafruit 1.8" SPI display.
  130 00000052         ; This library works with the Adafruit 1.8" TFT Breakout
                        w/SD card
  131 00000052         ; ----> http://www.adafruit.com/products/358
  132 00000052         ; as well as Adafruit raw 1.8" TFT display
  133 00000052         ; ----> http://www.adafruit.com/products/618
  134 00000052         ;
  135 00000052         ; Check out the links above for our tutorials and wiring
                        diagrams
  136 00000052         ; These displays use SPI to communicate, 4 or 5 pins are
                        required to
  137 00000052         ; interface (RST is optional)
  138 00000052         ; Adafruit invests time and resources providing this ope



ARM Macro Assembler    Page 4 


                       n source code,
  139 00000052         ; please support Adafruit and open-source hardware by pu
                       rchasing
  140 00000052         ; products from Adafruit!
  141 00000052         ;
  142 00000052         ; Written by Limor Fried/Ladyada for Adafruit Industries
                       .
  143 00000052         ; MIT license, all text above must be included in any re
                       distribution
  144 00000052         ;****************************************************
  145 00000052         
  146 00000052 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  147 00000054                 END                          ; end of file
              4000800C 
              400043FC 
              40008008 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\lcd.d -o.\lcd.o -I.\RTE\_Lab8 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.
4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include
\TM4C123 --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526" -
-predefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --list=.\lcd.lst LC
D.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 32 in file LCD.s
   Uses
      None
Comment: .text unused
commandBusyWait1 00000006

Symbol: commandBusyWait1
   Definitions
      At line 68 in file LCD.s
   Uses
      At line 72 in file LCD.s
Comment: commandBusyWait1 used once
commandBusyWait2 0000001E

Symbol: commandBusyWait2
   Definitions
      At line 83 in file LCD.s
   Uses
      At line 87 in file LCD.s
Comment: commandBusyWait2 used once
dataBusyWait1 00000034

Symbol: dataBusyWait1
   Definitions
      At line 107 in file LCD.s
   Uses
      At line 111 in file LCD.s
Comment: dataBusyWait1 used once
writecommand 00000000

Symbol: writecommand
   Definitions
      At line 58 in file LCD.s
   Uses
      At line 29 in file LCD.s
Comment: writecommand used once
writedata 0000002E

Symbol: writedata
   Definitions
      At line 99 in file LCD.s
   Uses
      At line 30 in file LCD.s
Comment: writedata used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTA_DATA_R 400043FC

Symbol: GPIO_PORTA_DATA_R
   Definitions
      At line 22 in file LCD.s
   Uses
      At line 75 in file LCD.s
      At line 114 in file LCD.s

SSI0_DR_R 40008008

Symbol: SSI0_DR_R
   Definitions
      At line 23 in file LCD.s
   Uses
      At line 80 in file LCD.s
      At line 119 in file LCD.s

SSI0_SR_R 4000800C

Symbol: SSI0_SR_R
   Definitions
      At line 24 in file LCD.s
   Uses
      At line 67 in file LCD.s
      At line 106 in file LCD.s

SSI_SR_BSY 00000010

Symbol: SSI_SR_BSY
   Definitions
      At line 26 in file LCD.s
   Uses
      At line 70 in file LCD.s
      At line 85 in file LCD.s

SSI_SR_RNE 00000004

Symbol: SSI_SR_RNE
   Definitions
      At line 25 in file LCD.s
   Uses
      None
Comment: SSI_SR_RNE unused
SSI_SR_TNF 00000002

Symbol: SSI_SR_TNF
   Definitions
      At line 27 in file LCD.s
   Uses
      None
Comment: SSI_SR_TNF unused
6 symbols
348 symbols in table
